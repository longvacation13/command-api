plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    // JSON 처리 라이브러리 (필수)
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //implementation 'jakarta.validation:jakarta.validation-api:3.0.2' // 직접 추가
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // Lombok 의존성 추가
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    // log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
    // aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // SpringDoc OpenAPI UI 의존성 추가(swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // circuit breaker
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.0.2' // Resilience4j for Spring Boot 3
}

tasks.named('test') {
    useJUnitPlatform()
}
